
--COMPUTED COLOUMN TAX
CREATE FUNCTION FN_CALCULATE_TAX(@PK INT)
RETURNS FLOAT
AS
BEGIN
DECLARE @TAX FLOAT=(SELECT (PRICE*0.1) FROM PRODUCT WHERE PRODUCT_ID = @PK)
RETURN @TAX
END
GO

ALTER TABLE PRODUCT
ADD TAX AS (dbo.FN_CALCULATE_TAX(PRODUCT_ID));
GO




--BUSINESS RULE: No Customers younger than 8 can buy romance novels
CREATE FUNCTION FN_CUST_YOUNGERTHAN8_NOROMANCENOVEL()
RETURNS INTEGER
AS
BEGIN
DECLARE @RET INTEGER =0
    IF EXISTS (SELECT * FROM ORDER_PRODUCT OP JOIN PRODUCT P
                    ON OP.Product_ID=P.PRODUCT_ID
                    JOIN BOOK B ON B.PRODUCT_ID=P.PRODUCT_ID
                    JOIN GENRE G ON B.GENRE_ID=G.GENRE_ID
                    JOIN ORDERS O ON OP.Order_ID=O.Order_ID
                    JOIN CUSTOMERS C ON C.Customer_ID=O.Customer_ID
                    WHERE GENRE_NAME='Romance novel'
                    AND DATEDIFF(YEAR,Birth_Date,GETDATE())<8)
    SET @RET=1
RETURN @RET
END
GO 

ALTER TABLE ORDER_PRODUCT WITH NOCHECK
ADD CONSTRAINT CK_FN_CUST_YOUNGERTHAN8_NOROMANCENOVEL
CHECK (dbo.FN_CUST_YOUNGERTHAN8_NOROMANCENOVEL()=0)
GO

--COMPUTED COLOUMN AGE
CREATE FUNCTION FN_CALCULATE_AGE(@PK INT)
RETURNS INTEGER
AS
BEGIN
DECLARE @AGE FLOAT=(SELECT DATEDIFF(YEAR,Birth_Date,GETDATE()) FROM CUSTOMERS WHERE Customer_ID = @PK)
RETURN @AGE
END
GO

ALTER TABLE CUSTOMERS
ADD AGE AS (dbo.FN_CALCULATE_AGE(Customer_ID));
GO

--BUSINESS RULE : ALL CUSTOMERS MUST SPEND A MINIMUM OF $5
CREATE FUNCTION FN_MIN_5USD_SPEND()
RETURNS INTEGER
AS
BEGIN
DECLARE @RET INTEGER =0
    IF EXISTS (SELECT Total_Cost FROM ORDERS WHERE Total_Cost<5)
    SET @RET=1
RETURN @RET
END
GO 

ALTER TABLE ORDERS WITH NOCHECK
ADD CONSTRAINT CK_MIN_5USD_SPEND
CHECK (dbo.FN_MIN_5USD_SPEND()=0)
GO